name: CD

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build
    strategy:
      matrix:
        job:
          - { os: macos-latest,   target: x86_64-apple-darwin,         use-cross: false }
          - { os: windows-latest, target: x86_64-pc-windows-msvc,      use-cross: false }
          - { os: ubuntu-latest , target: x86_64-unknown-linux-gnu,    use-cross: false }
          - { os: ubuntu-latest,  target: x86_64-unknown-linux-musl,   use-cross: true }
          - { os: ubuntu-latest,  target: arm-unknown-linux-gnueabihf, use-cross: true }
          - { os: ubuntu-latest,  target: aarch64-unknown-linux-gnu,   use-cross: true }
    runs-on: ${{ matrix.job.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.job.target }}

      - name: Build target
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: build
          target: ${{ matrix.job.target }}
          args: "--locked --release --bin c2g"
          strip: true

      - name: Format
        run: cargo fmt --all -- --check

      - name: Test
        run: cargo test

      - name: Upload target
        uses: actions/upload-artifact@v3
        with:
          name: target
          path: "target/${{ matrix.job.target }}/release/c2g"
          if-no-files-found: ignore


  github_release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.job.target }}/release
          tar czvf ../../../c2g-${{ matrix.job.target }}.tar.gz c2g
          cd -

      - name: Download targets
        uses: actions/download-artifact@v3
        with:
          name: target

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: 'target/*/release/c2g*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}


  image_release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get tag
        id: tagName
        uses: olegtarasov/get-tag@v2.1
        with:
          tagRegex: "v(.*)"
          tagRegexGroup: 1

      - name: Docker buildx and push
        run: |
          docker buildx build \
            --platform linux/386,linux/amd64,linux/arm/v7,linux/arm64 \
            --output "type=image,push=true" \
            --tag tomasfarias/c2g:latest \
            --tag tomasfarias/c2g:${{ steps.tagName.outputs.tag }} \
            --file ./Dockerfile .

  crate_publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Publish
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_TOKEN }}
